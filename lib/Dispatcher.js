// Generated by CoffeeScript 1.7.1
(function() {
  define(function() {
    var Dispatcher;
    return Dispatcher = (function() {
      function Dispatcher() {}

      Dispatcher.prototype.callbacks = {};

      Dispatcher.prototype.addListener = function(eventName, callback) {
        var list, _base;
        list = (_base = this.callbacks)[eventName] || (_base[eventName] = []);
        if (list.indexOf(callback) < 0) {
          return this.callbacks[eventName].push(callback);
        }
      };

      Dispatcher.prototype.removeListener = function(eventName, callback) {
        var i, index, list, _i, _ref;
        index = -1;
        list = this.callbacks[eventName];
        for (i = _i = 0, _ref = list.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          console.log(i);
          if (list[i] === callback) {
            index = i;
          }
        }
        return list.splice(index, 1);
      };

      Dispatcher.prototype.dispatch = function(eventName, data) {
        var callback, chain, _i, _len, _results;
        chain = this.callbacks[eventName];
        if (chain != null) {
          _results = [];
          for (_i = 0, _len = chain.length; _i < _len; _i++) {
            callback = chain[_i];
            _results.push(callback(data));
          }
          return _results;
        }
      };

      return Dispatcher;

    })();
  });

}).call(this);
